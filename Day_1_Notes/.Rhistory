G <- r^(0:n)
class(G)
sum(G)
1/(1-r)
n = 50
sum(G)
n = 50
1/(1-r)
run <- runif(20)
run
run[run < mean(run)]
seq(1,100, 2)
t(1:100)
length(t)
t <- 1:100
length(t)
v <- 1:26
v[seq(1, length(v), 2)]
?rep
seq(1:10)
v[seq(1:length(v), 2)]
v[seq(1:length(v), 2)]
n <- length(v)
v[seq(1:n, 2)]
seq(1:10, 2)
?seq
seq(1:n, by = "2")
seq(1:n, by = 2)
rep(c(1,2), 1)
rep(c(1,2), 4)
v <- rep(c(1,2), 4)
X <- matrix(v,nrow=2,ncol=4)
X
?rnorm
5*7
matrix(rnorm(35, 1, 2), 5, 7)
C <- cbind(1:3,4:6,5:7); C
D <- rbind(1:3,4:6); D
rbind(C,D)
cbind(C, C)
cbind(C,D)
x <- seq(1,27)
dim(x) <- c(3,9)
x
is.array(x)
is.matrix(x)
data.url <- "http://kingaa.github.io/R_Tutorial/hurricanes.csv"
dat <- read.csv(data.url,comment.char='#')
str(dat)
course.url <- "http://kingaa.github.io/R_Tutorial/"
download.file(paste0(course.url,"Intro1.R"),destfile="Intro1.R",mode="w")
source("Intro1.R")
source("Intro1.R")
download.file(paste0(course.url,"Intro2.R"),destfile="Intro2.R",mode="w")
download.file(paste0(course.url,"ChlorellaGrowth.csv"),destfile="ChlorellaGrowth.csv",mode="w")
course.url <- "http://kingaa.github.io/R_Tutorial/"
download.file(paste0(course.url,"Intro2.R"),destfile="Intro2.R",mode="w")
download.file(paste0(course.url,"ChlorellaGrowth.csv"),destfile="ChlorellaGrowth.csv",mode="w")
X <- read.csv("ChlorellaGrowth.csv",comment.char='#')
wd
wd()
getwd
getwd()
?plot
?par
source('~/Intro2_copy.R')
X <- read.csv('ChlorellaGrowth.csv',comment.char='#')
head(X)
light
source('~/Intro2_copy.R')
plot(fit)
?lm
?plot.lm
?plot
?par
par(cex=1.5,cex.main=0.9)
plot(rmax~LogLight,data=X,xlab="Log light intensity (uE/m2/s)"
, ylab="maximum growth rate (1/d)",pch=16, xlim = c(0, 120), ylim = c(1,4))
par(cex=1.5,cex.main=0.9)
plot(rmax~lighight,data=X,xlab="Light intensity (uE/m2/s)"
, ylab="maximum growth rate (1/d)",pch=16, xlim = c(0, 120), ylim = c(1,4))
par(cex=1.5,cex.main=0.9)
plot(rmax~light,data=X,xlab="Light intensity (uE/m2/s)"
, ylab="maximum growth rate (1/d)",pch=16, xlim = c(0, 120), ylim = c(1,4))
source('~/Documents/UCLA/Rbootcamp/Tutorial/9.11.0.0.4_Intro2_copy.R')
source('~/Documents/UCLA/Rbootcamp/Tutorial/9.11.0.0.4_Intro2_copy.R')
source('~/Documents/UCLA/Rbootcamp/Tutorial/9.11.0.0.4_Intro2_copy.R')
source('~/Documents/UCLA/Rbootcamp/Tutorial/9.11.0.0.4_Intro2_copy.R')
source('~/Documents/UCLA/Rbootcamp/Tutorial/9.11.0.0.4_Intro2_copy.R')
source('~/Documents/UCLA/Rbootcamp/Tutorial/9.11.0.0.4_Intro2_copy.R')
source('~/Documents/UCLA/Rbootcamp/Tutorial/9.11.0.0.4_Intro2_copy.R')
source('~/Documents/UCLA/Rbootcamp/Tutorial/9.11.0.0.4_Intro2_copy.R')
?text
x <- 3:8
y <- 5x + 3
y <- 5*x + 3
plot(x~y)
plot(y~x, xlim = c(3, 8))
plot(y~x, xlim = c(3, 8), lty = 1, col = 1)
line <- lm(y~x)
abline(line)
plot(y~x, xlim = c(3, 8), lty = 2, col = 1)
abline(line)
abline(line, lty = 2)
?abline
plot(y~x, xlim = c(3, 8), type = "b", lty = 1, col = 1)
plot(y~x, xlim = c(3, 8), type = "b", lty = 2, col = 1)
plot(y~x, xlim = c(3, 8), type = "b", lty = 3, col = 1)
plot(y~x, xlim = c(3, 8), type = "b", lty = 4, col = 1)
plot(y~x, xlim = c(3, 8), type = "b", lty = 4, col = 2)
x <- 3:8
y <- 5*x + 3
par(mfcol = c(2, 2))
plot(y~x, xlim = c(3, 8), type = "b", lty = 1, col = 4)
plot(y~x, xlim = c(3, 8), type = "b", lty = 2, col = 3)
plot(y~x, xlim = c(3, 8), type = "b", lty = 3, col = 2)
plot(y~x, xlim = c(3, 8), type = "b", lty = 4, col = 1)
?plot
x <- 3:8
y <- 5*x + 3
par(mfcol = c(2, 2))
plot(y~x, xlim = c(3, 8), type = "l", lty = 1, col = 4)
plot(y~x, xlim = c(3, 8), type = "l", lty = 2, col = 3)
plot(y~x, xlim = c(3, 8), type = "l", lty = 3, col = 2)
plot(y~x, xlim = c(3, 8), type = "l", lty = 4, col = 1)
?dev.print
?example
dev.prev()
dev.print()
getwd()
dev.print("/Documents/UCLA/Rbootcamp/Tutorial")
dev.print("~/Documents/UCLA/Rbootcamp/Tutorial")
ev.print(png, file = "myplot.png")
dev.print(png, file = "myplot.png")
dev.print(png, file = "myplot.png", width = 1024, height = 768)
source('~/Documents/UCLA/Rbootcamp/Tutorial/11.0.0.0.6.R')
source('~/Documents/UCLA/Rbootcamp/Tutorial/11.0.0.0.6.R')
phi <- 1
for (k in 1:100) {
phi <- 1+1/phi
print(c(k,phi))
}
a <- 1.1
b <- 0.001
T <- seq(from=1,to=200,by=1)
N <- numeric(length(T))
n <- 2
for (t in T) {
n <- a*n/(1+b*n)
N[t] <- n
}
plot(T,N)
N
1.1*2/(1+.001*2)
N[1]
N[2]
N[3]
1.1*3/(1+.001*3)
a <- 1.1
b <- 0.001
T <- seq(from=1,to=200,by=1)
N <- numeric(length(T))
n <- 2
for (t in T) {
n <- a*n/(1+b*n)
N[t] <- n
}
N[1]
N[2]
a <- 1.1
b <- 0.001
T <- seq(from=1,to=200,by=1)
N <- numeric(length(T))
n <- 2
N
n <- a*n/(1+b*n) ; N[1] <- n
N
install.packages("rmarkdown")
a <- 1.1
b <- 0.001
T <- seq(from=1,to=200,by=1)
N <- numeric(length(T))
n <- 2
for (t in T) {
n <- a*n/(1+b*n)
N[t] <- n
}
a <- 1.1
b <- 0.001
T <- seq(from=1,to=1,by=1)
N <- numeric(length(T))
n <- 2
for (t in T) {
n <- a*n/(1+b*n)
N[t] <- n
}
plot(N)
plot(T, N)
a <- 1.1
b <- 0.001
T <- seq(from=1,to=500,by=1)
N <- numeric(length(T))
n <- 2
for (t in T) {
n <- a*n/(1+b*n)
N[t] <- n
}
plot(T, N)
a <- 1.1
b <- 0.001
T <- seq(from=0,to=0,by=1)
N <- numeric(length(T))
n <- 2
for (t in T) {
n <- a*n/(1+b*n)
N[t] <- n
}
plot(T,N)
N <- numeric(length(T))
for (t in 1:length(T)) {
n <- a*n/(1+b*n)
N[t] <- n
}
N <- numeric(length(T))
for (t in 1:length(T)) {
n <- a*n/(1+b*n)
N[t] <- n
}
a <- 1.1
b <- 0.001
T <- seq(from=1,to=200,by=1)
N <- numeric(length(T))
n <- 2
N <- numeric(length(T))
for (t in 1:length(T)) {
n <- a*n/(1+b*n)
N[t] <- n
}
plot(T,N)
a <- 1.1
b <- 0.001
T <- seq(from=1,to=1,by=1)
N <- numeric(length(T))
n <- 2
for (t in 1:length(T)) {
n <- a*n/(1+b*n)
N[t] <- n
}
plot(T,N)
a <- 1.1
b <- 0.001
T <- seq(from=0,to=0,by=1)
N <- numeric(length(T))
n <- 2
for (t in 1:length(T)) {
n <- a*n/(1+b*n)
N[t] <- n
}
plot(T,N)
phi <- 20
k <- 1
while (k <= 100) {
phi <- 1+1/phi
print(c(k,phi))
k <- k+1
}
phi <- 20
conv <- FALSE
while (!conv) {
phi.new <- 1+1/phi
conv <- phi==phi.new
phi <- phi.new
}
phi <- 20
conv <- FALSE
while (!conv) {
phi.new <- 1+1/phi
conv <- phi==phi.new
phi <- phi.new
}
phi <- 20
conv <- FALSE
while (!conv) {
phi.new <- 1+1/phi
conv <- phi==phi.new
phi <- phi.new
}
phi <- 20
conv <- FALSE
phi <- 20
conv <- FALSE
while (!conv) {
phi.new <- 1+1/phi
conv <- phi==phi.new
phi <- phi.new
}
a <- 1.1
b <- 0.001
T <- seq(from=1,to=200,by=1)
N <- numeric(length(T))
n <- 2
for (t in T) {
n <- a*n/(1+b*n)
N[t] <- n
}
plot(N,T)
plot(T,N)
download.packages("ape", ".")
install.packages("geiger")
install.packages("ggplot2")
source('~/.active-rstudio-document')
a <- 1.1
b <- 0.001
T <- seq(from=1,to=200,by=1)
N <- numeric(length(T))
n <- 2
conv <- F
while (!conv) {
N.new <- a*n/(1+b*n)
conv <- N == N.new
N <- N.new
}
plot(T, N)
plot(T,N)
a <- 1.1
b <- 0.001
N <- 2
conv <- F
while (!conv) {
N.new <- a*n/(1+b*n)
conv <- N == N.new
N <- N.new
}
N
a <- 1.1
b <- 0.001
N <- 2
conv <- F
while (!conv) {
N.new <- a*n/(1+b*n)
conv <- N == N.new
N <- N.new
}
a <- 1.1
b <- 0.001
N <- 2
conv <- F
while (!conv) {
N.new <- a*N/(1+b*N)
conv <- N == N.new
N <- N.new
}
getwd()
setwd("Users/Tuna/Documents/UCLA/Rbootcamp/Day_1_Notes")
setwd("Users/Tuna/Documents")
setwd("~/Documents/UCLA/Rbootcamp/Day_1_Notes")
getwd()
setwd("/Users/Tuna/Documents/UCLA/Rbootcamp/Day_1_Notes")
setwd("/Users/Tuna/Documents/UCLA/")
setwd("~/Rbootcamp/Day_1_Notes")
setwd("/Users/Tuna/Documents/UCLA/")
setwd("/Users/Tuna/Documents/UCLA/Rbootcamp/")
setwd("/Users/Tuna/Documents/UCLA/Rbootcamp/Day_1_Notes/")
getwd()
for (ii in 1:5){
cat("\nthe number is ", ii)
}
notfish <- c("bat", "dolphin", "toad", "soldier")
for(animal in notfish){
cat(animal, "fish\n", sep="")
}
notfish <- c("bat", "dolphin", "toad", "soldier")
for(animal in notfish){
cat(animal, "fish", sep="")
}
dog \n cat
paste("cat\n", "dog")
paste("cat\n", "dog", sep = "")
paste(cat\n, dog, sep = "")
paste("cat\n", "dog", sep = "")
paste("cat", "dog", sep = "\n")
xx <- 1
while(xx < 5) {
xx <- xx+1;
if (xx == 3) {
break; }
}
print(xx)
library("ape", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("rmarkdown", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
for(ii in 1:6){
if (ii %% 2) {
cat(ii, " is odd\n")
}
else{
cat(ii, " is even\n")
}
}
1 %% 2
cat("dog\n", "cat")
cat("dog\n", "cat", sep="")
cat("cat\n", "dog" sep="")
cat("cat\n", "dog", sep="")
cat("cat", "dog", sep="")
knitr::opts_chunk$set(echo = TRUE)
plot(pressure)
plot(pressure)
lower = 1; upper = 5; squaresum = 0
for (ii in lower:upper){
cat(ii, ii^2, "\n")
squaresum <- squaresum +  ii^2
}
cat("the sum of it all is ", squaresum)
takeNoArguments <- function() {
cat('this function takes no arguments\n'); cat('it also\n');
cat('returns nothing\n');
cat('you never get something for nothing.\n')
}
takeNoArguments()
doubler <- function(num){
doubled = 2 * num
cat("witness the awesome power of the doubler\n")
cat("I changed ", num, " to ", doubled, "\n")
cat("you're welcome!\n")
return(doubled)
}
doubler(4)
greeter <- function(name) {
cat('Hello, ', name, '\n');
}
greeter("Tina")
for(ii in 1:10){}
for(ii in 1:10){ doubled <- doubler(ii) cat(doubled, "\n")}
for(ii in 1:10){ doubled <- doubler(ii); cat(doubled, "\n")}
s1<-rnorm(1000,mean=0,sd=1)
s3<-rnorm(1000,mean=0,sd=3)
head(s1)
head(s3)
pdf(file="Normal_hist.pdf", width=4,height=7);
par(mfrow=c(2,1), mar=c(4, 4, 3, 2)) #sets plotting area and margins
hist(s1,col=2,xlab="Value",main="Sigma=1") #make first hist
hist(s3,col=4,xlab="Value",main="Sigma=3") #make second hist
dev.off() #shuts off current output device
hist(s1,col="dukeblue",xlab="Value",main="Sigma=1")
hist(s1,col="purple",xlab="Value",main="Sigma=1")
hist(s1,col="orange",xlab="Value",main="Sigma=1")
hist(s1,col="orange",xlab="Value",main="Sigma=1", ylim = c(0,100))
hist(s1,col="orange",xlab="Value",main="Sigma=1", ylim = c(0,250))
hist(s1,col="purple",xlab="Value",main="Sigma=1", ylim = c(0,250))
hist(s1,col="purple",xlab="Value",expression(paste(sigma,"=1")), ylim = c(0,250))
hist(s1,col="purple",xlab="Value",main = expression(paste(sigma,"=1")), ylim = c(0,250))
hist(s1,col="purple",xlab="Value",main=paste(expression(sigma),"=1"), ylim = c(0,250))
expression(sigma)
expression(sigma)
expression(paste(sigma))
plot(s1,s3)
lm(s1~s3)
abline(lm(s1~s3))
density(s1)
plot(density(s1))
plot(density(s3))
plot(density(s1),col=2,lwd=4,xlab="Value",xlim=c(-15,15),main="Normal
distribution")
lines(density(s3),col=4,lwd=4) #add the SD=3 values
legend(-15,0.4,c("sigma=1","sigma=3"),lwd=4,col=c(2,4),cex=1.5)
legend(-15,0.4,c("sigma=1","sigma=3"),lwd=4,col=c(2,4),cex=1.5)
?legend
legend(-15,0.4,c("sigma=1","sigma=3"),lwd=25,col=c(2,4),cex=1.5)
legend(-15,0.4,c("sigma=1","sigma=3"),lwd=4,col=c(2,4),cex=1.5)
plot(density(s1),col=2,lwd=4,xlab="Value",main="Normal
distribution")
lines(density(s3),col=4,lwd=4) #add the SD=3 values
plot(density(s1),col=2,lwd=4,xlab="Value",xlim=c((min(s3)-2),(max(s3)+2)),main="Normal
distribution")
lines(density(s3),col=4,lwd=4) #add the SD=3 values
legend(-15,0.4,c("sigma=1","sigma=3"),lwd=4,col=c(2,4))
legend(-12,0.4,c("sigma=1","sigma=3"),lwd=4,col=c(2,4))
rm( legend(-15,0.4,c("sigma=1","sigma=3"),lwd=4,col=c(2,4)))
legend(-15,0.4,c("sigma=1","sigma=3"),lwd=4,col=c(2,4), cex = 5)
legend(-15,0.4,c("sigma=1","sigma=3"),lwd=4,col=c(2,4), cex = 1)
bind <- cbind(s1, s3)
head(bind)
boxplot(cbind(s1,s3))
boxplot(c(s1,s3))
boxplot(rbind(s1[1:5],s3[1:5]))
hist(s1)$counts
bins<-seq(-10,10,by=1)
hist(s1,breaks=bins)$breaks
hist(s1,breaks=bins)$counts
counts_s1<-hist(s1,breaks=bins)$counts
counts_s3<-hist(s3,breaks=bins)$counts
bins<-seq(-14,14,by=1)
counts_s1<-hist(s1,breaks=bins)$counts
counts_s3<-hist(s3,breaks=bins)$counts
par(mfrow=c(1,1), mar=c(4, 4, 3, 2))
barplot(rbind(counts_s1,counts_s3),col=c(2,4),beside=T,names.arg=
seq(-10,9.5,by=1),xlab="Value",ylab="Count")
barplot(rbind(counts_s1,counts_s3),col=c(2,4),beside=T,names.arg=
seq(-14,14,by=1),xlab="Value",ylab="Count")
barplot(rbind(counts_s1,counts_s3),col=c(2,4),beside=T,names.arg=
seq(-14,13,by=1),xlab="Value",ylab="Count")
barplot(rbind(counts_s1,counts_s3),col=c(2,4),beside=F,names.arg=
seq(-14,13,by=1),xlab="Value",ylab="Count")
barplot(rbind(counts_s1,counts_s3),col=c(2,4),beside=T,names.arg=
seq(-14,13,by=1),xlab="Value",ylab="Count")
x<-rnorm(100)
y<-x+rnorm(100,sd=0.2)
plot(x,y,pch=19)
plot(x,y,pch=19,cex.lab=2,cex.axis=2)
plot(x,y,pch=19,cex.lab=2,)
plot(x,y,pch=19,cex.axis=2)
